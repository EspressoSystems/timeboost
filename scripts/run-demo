#!/bin/bash

set -euox pipefail

just build_release --features until

if [ -z "${1:-}" ]; then
    nodes=5
else
    if ! [[ $1 =~ ^[5-9]+$ ]]; then
        echo "Error: The number of nodes must be a positive integer greater than 4."
        exit 1
    fi
    nodes=$1
fi

late_start=false

if [ "${2:-}" = "true" ]; then
    late_start=true
fi
pids=()
for i in $(seq 0 $((nodes - 1))); do
    echo "Starting node $i"

    if [[ $i == 0 ]]; then
      cmd="RUST_LOG=error,timeboost=debug,timeboost_core=error,timeboost_networking=error,timeboost_crypto=error \
      heaptrack ./target/release/timeboost \
          --id $i \
          --port $((8000 + $i)) \
          --rpc-port $((8800 + $i)) \
          --metrics-port $((9000 + $i)) \
          --committee-size $nodes \
          --base local \
          --until 10000 \
          --watchdog-timeout 300"
    else
      cmd="RUST_LOG=error,timeboost=debug,timeboost_core=error,timeboost_networking=error,timeboost_crypto=error \
      ./target/release/timeboost \
          --id $i \
          --port $((8000 + $i)) \
          --rpc-port $((8800 + $i)) \
          --metrics-port $((9000 + $i)) \
          --committee-size $nodes \
          --base local \
          --until 10000 \
          --watchdog-timeout 300"
    fi
    if $late_start; then
        cmd="$cmd --late-start --late-start-node-id 0"
    fi

    eval $cmd &
    pids+=($!)
done

RUST_LOG=info ./target/release/tx-generator --committee-size $nodes --interval-ms 1000 --max-tx-size 10240 --until 10000 --watchdog-timeout 300 &

pids+=($!)

for pid in "${pids[@]}"; do
    wait $pid
    exit_code=$?

    if [ $exit_code -eq 0 ]; then
        echo "Process $pid completed successfully with exit code $exit_code."
    else
        echo "Process $pid failed with exit code $exit_code."
    fi
done

echo "All processes have finished."
