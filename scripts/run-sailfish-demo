#!/bin/bash

set -euo pipefail

# Set default RUST_LOG if not already defined
if [ -z "${RUST_LOG:-}" ]; then
    export RUST_LOG="sailfish=info,timeboost=info,sailfish_consensus=warn,cliquenet=warn,sailfish_rbc=info"
fi

# Cleanup function to kill anvil when done
cleanup() {
    echo "Cleaning up..."
    if [ -f .anvil.pid ]; then
        ANVIL_PID=$(cat .anvil.pid)
        if [ -n "$ANVIL_PID" ]; then
            echo "Stopping anvil (PID: $ANVIL_PID)..."
            kill "$ANVIL_PID" 2>/dev/null || true
        fi
        rm -f .anvil.pid anvil.log
    fi
    kill "$(jobs -p)" 2>/dev/null || true
}

trap cleanup EXIT TERM INT

just build_release

just test-contract-deploy --keep-anvil
echo "=== Contract deployment completed ==="

# Spawn all sailfish nodes
config_dir="test-configs/c0"
i=0
pids=()
for f in "$config_dir"/node_*.toml; do
    cmd=(target/release/sailfish
        --committee-id 0
        --config-file "$f"
        --stamp "${TMPDIR:-/tmp}/stamp-$i.sf"
        --ignore-stamp
        --until 300)

    "${cmd[@]}" &
    pids+=($!)
    ((i++))
done

wait "${pids[@]}"
