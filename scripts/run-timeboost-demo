#!/usr/bin/env bash

set -muo pipefail

cleanup() {
    trap - EXIT TERM
    if [ -f .anvil.pid ]; then
        ANVIL_PID=$(cat .anvil.pid)
        if [ -n "$ANVIL_PID" ]; then
            echo "Stopping anvil (PID: $ANVIL_PID)..."
            kill "$ANVIL_PID" 2>/dev/null || true
        fi
        rm -f .anvil.pid anvil.log
    fi
    kill $(jobs -p) 2>/dev/null || true
}

trap cleanup EXIT TERM INT

rounds=300
late_start=false
config_dir=
tps=1
ignore_stamp=false
nitro_url=
yapper=false

while [[ $# -gt 0 ]]; do
    case "$1" in
        -c|--config-dir)
            config_dir="$2"
            shift 2
            ;;
        -l|--late)
            late_start=true
            shift
            ;;
        -r|--rounds)
            rounds="$2"
            shift 2
            ;;
        -t|--tps)
            tps="$2"
            shift 2
            ;;
        -n|--nitro)
            nitro_url="$2"
            shift 2
            ;;
        --ignore-stamp)
            ignore_stamp=true
            shift
            ;;
        --yapper)
            yapper=true
            shift
            ;;
        *)
            echo -e "Unknown: $1\n"
            echo "Usage: $0 [Options] where

Options:

    -l | --late
        Delayed startup of first node.

    -c | --config-dir <PATH>
        Use a TOML file for node config (keys and network addresses).

    -r | --rounds <NUMBER>
        Run for the given number of rounds (default = 1000).

    -t | --tps <number>
        number of transactions per second to generate.

    -n | --nitro <URL>
        Address the local Nitro node is running.

    --yapper
        Run external transaction generator.

    --ignore-stamp
        Ignore an existing stamp file and start from genesis"
            exit 1
            ;;
    esac
done

if [ ! $config_dir ]; then
    echo "Missing -c | --config-dir <PATH>"
    exit 1
fi

just build_release --features="until"

if [ $nitro_url ]; then
    timeout 90 bash -c "until curl -sSf $nitro_url -o /dev/null; do sleep 1; done" || exit 1
fi


RUST_LOG=${RUST_LOG:-}

if [ -z "$RUST_LOG" ]; then
    RUST_LOG="sailfish=info,timeboost=info,sailfish_consensus=warn,cliquenet=warn,sailfish_rbc=info,robusta=debug"
fi

cmd=("test-contract-deploy" "--keep-anvil")
if [ $nitro_url ]; then
    cmd+=("--nitro-enabled")
fi
just "${cmd[@]}"
echo "=== Contract deployment completed ==="

pids=()
i=0
for f in "$config_dir"/node_*.toml; do
    cmd=(target/release/timeboost
        --committee-id 0
        --config "$f"
        --until $rounds
        --watchdog-timeout 120)

    if $ignore_stamp; then
        cmd+=(--ignore-stamp)
    fi

    if $late_start && (( $i == 0 )); then
        cmd+=(--start-delay 5)
    fi

    if $yapper; then
        cmd+=(--required-decrypt-rounds 3)
    fi

    echo "${cmd[@]}"
    RUST_LOG=$RUST_LOG "${cmd[@]}" &

    pids+=($!)
    ((i++))
done

if $yapper; then
    cmd=(target/release/yapper
        --tps $tps
        --config "$config_dir/committee.toml")
    if [ $nitro_url ]; then
        cmd+=(--nitro-url "$nitro_url")
    fi
    "${cmd[@]}" &
fi

wait "${pids[@]}"
