#!/usr/bin/env bash

set -emuo pipefail

cleanup() {
    trap - EXIT TERM
    kill $(jobs -p) 2>/dev/null || true
}

trap cleanup EXIT TERM INT

rounds=300
late_start=false
keyset_file=
tps=1
stamp=
ignore_stamp=false
nitro_node_url=
namespace=10101
yapper=false

while [[ $# -gt 0 ]]; do
    case "$1" in
        -k|--keyset-file)
            keyset_file="$2"
            shift 2
            ;;
        -n|--namespace)
            namespace="$2"
            shift 2
            ;;
        -l|--late)
            late_start=true
            shift
            ;;
        -r|--rounds)
            rounds="$2"
            shift 2
            ;;
        -u|--url)
            nitro_node_url="$2"
            shift 2
            ;;
        -s|--stamp)
            stamp="$2"
            shift 2
            ;;
        --ignore-stamp)
            ignore_stamp=true
            shift
            ;;
        --yapper)
            yapper=true
            shift
            ;;
        *)
            echo -e "Unknown: $1\n"
            echo "Usage: $0 [Options] where

Options:

    -l | --late
        Delayed startup of first node.

    -n | --namespace <NUMBER>
        Espresso transactions namespace ID.

    -k | --keyset-file <PATH>
        Use a JSON file for node keys.

    -r | --rounds <NUMBER>
        Run for the given number of rounds (default = 1000).

    -t | --tps <number>
        number of transactions per second to generate.

    -u | --url <URL>
        Nitro URL.

    -s | --stamp <PATH prefix>
        Path prefix for the stamp files.

    --yapper
        Run external transaction generator.

    --ignore-stamp
        Ignore an existing stamp file and start from genesis"
            exit 1
            ;;
    esac
done

if [ ! $stamp ]; then
    echo "Missing -s | --stamp <PATH prefix>"
    exit 1
fi

if [ ! $keyset_file ]; then
    echo "Missing -k | --keyset-file <PATH>"
    exit 1
fi

if [ -n "$nitro_node_url" ]; then
    docker run --rm --name nitro-dev -p 8547:8547 "offchainlabs/nitro-node:v3.2.1-d81324d" --dev --http.addr 0.0.0.0 --http.api=net,web3,eth,debug &
    timeout 30 bash -c 'until curl -sSf http://localhost:8547 -o /dev/null; do sleep 1; done' || exit 1
fi

just build_release --features="until"

nodes=$(jq '.keyset | length' $keyset_file)

RUST_LOG=${RUST_LOG:-}

if [ -z "$RUST_LOG" ]; then
    RUST_LOG="sailfish=info,timeboost=info,sailfish_consensus=warn,cliquenet=warn,sailfish_rbc=info"
fi

pids=()
for (( i=0; i<$nodes; i++ )); do
    cmd=(target/release/timeboost
        --id $i
        --http-port $((8800 + $i))
        --until $rounds
        --keyset-file $keyset_file
        --stamp "${stamp}-$i.sf"
        --watchdog-timeout 100
        --namespace $namespace)

    if $ignore_stamp; then
        cmd+=(--ignore-stamp)
    fi

    if $late_start; then
        cmd+=(--late-start --late-start-node-id 0)
    fi

    if [ -n "$nitro_node_url" ]; then
        cmd+=(--nitro-node-url $nitro_node_url)
    fi

    echo "${cmd[@]}"
    RUST_LOG=$RUST_LOG "${cmd[@]}" &

    pids+=($!)
done

if $yapper; then
    target/release/yapper --tps $tps --keyset-file $keyset_file &
fi

wait "${pids[@]}"
