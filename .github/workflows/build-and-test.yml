name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install Just
      run: |
        wget https://github.com/casey/just/releases/download/1.14.0/just-1.14.0-x86_64-unknown-linux-musl.tar.gz
        tar -vxf just-1.14.0-x86_64-unknown-linux-musl.tar.gz just
        sudo cp just /usr/bin/just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - name: Build
      run: just build_release
    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: binary
        path: target/release/sailfish

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: taiki-e/install-action@nextest
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - name: Install Just
      run: |
        wget https://github.com/casey/just/releases/download/1.14.0/just-1.14.0-x86_64-unknown-linux-musl.tar.gz
        tar -vxf just-1.14.0-x86_64-unknown-linux-musl.tar.gz just
        sudo cp just /usr/bin/just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Run tests
      run: just test_ci

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - name: Install Just
      run: |
        wget https://github.com/casey/just/releases/download/1.14.0/just-1.14.0-x86_64-unknown-linux-musl.tar.gz
        tar -vxf just-1.14.0-x86_64-unknown-linux-musl.tar.gz just
        sudo cp just /usr/bin/just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Check packages individually
      run: just check-individually
    - name: Run lint
      run: just lint

  build-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: docker/setup-buildx-action@v3
    - name: Install Just
      run: |
        wget https://github.com/casey/just/releases/download/1.14.0/just-1.14.0-x86_64-unknown-linux-musl.tar.gz
        tar -vxf just-1.14.0-x86_64-unknown-linux-musl.tar.gz just
        sudo cp just /usr/bin/just
    - name: Build Docker
      run: just build_docker

  integration:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - name: Install Just
      run: |
        wget https://github.com/casey/just/releases/download/1.14.0/just-1.14.0-x86_64-unknown-linux-musl.tar.gz
        tar -vxf just-1.14.0-x86_64-unknown-linux-musl.tar.gz just
        sudo cp just /usr/bin/just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Run tests
      run: just run_demo --ignore-stamp --yapper -c test-configs/c0
    - name: Run tests with late-start node
      run: just run_demo -l --ignore-stamp --yapper -c test-configs/c0
    - name: Run sailfish demo
      run: just run_sailfish_demo
    - name: Test with block-maker
      run: just test-all

  contracts:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Install Just
      run: |
        wget https://github.com/casey/just/releases/download/1.14.0/just-1.14.0-x86_64-unknown-linux-musl.tar.gz
        tar -vxf just-1.14.0-x86_64-unknown-linux-musl.tar.gz just
        sudo cp just /usr/bin/just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Run contract tests
      run: forge test -vvv

  nitro-timeboost-integration:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - name: Install Just
      run: |
        wget https://github.com/casey/just/releases/download/1.14.0/just-1.14.0-x86_64-unknown-linux-musl.tar.gz
        tar -vxf just-1.14.0-x86_64-unknown-linux-musl.tar.gz just
        sudo cp just /usr/bin/just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Run Test Node with Timeboost
      run: |
        ./test-node/test-node.bash \
          --build-dev-nitro \
          --batchposters 0 \
          --redundantsequencers 1 \
          --decentralized-timeboost \
          --init &
    - name: Run test timeboost with nitro sequencer
      run: just run_demo --ignore-stamp -c test-configs/nitro-ci-committee --rounds 10000 --yapper --nitro http://localhost:8547
    - name: Verify sequencer blocks
      run: |
        RUST_LOG=info just verify_blocks
    - name: Docker Logs Sequencer 1
      if: failure()
      run: docker logs test-node-sequencer-1
    - name: Docker Logs Sequencer 2
      if: failure()
      run: docker logs test-node-sequencer_b-1

