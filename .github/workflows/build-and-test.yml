name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: Swatinem/rust-cache@v2
      name: Enable Rust Caching
      with:
        shared-key: "build"
        cache-on-failure: "true"
        save-if: ${{ github.ref == 'refs/heads/main' }}
        prefix-key: build
    - uses: taiki-e/install-action@just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - name: Build
      run: just build-release
    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: binary
        path: target/release/sailfish

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: Swatinem/rust-cache@v2
      name: Enable Rust Caching
      with:
        shared-key: "tests"
        cache-on-failure: "true"
        save-if: ${{ github.ref == 'refs/heads/main' }}
        prefix-key: tests
    - uses: taiki-e/install-action@nextest
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - uses: taiki-e/install-action@just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Run tests
      run: just test-ci

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: Swatinem/rust-cache@v2
      name: Enable Rust Caching
      with:
        shared-key: "lint"
        cache-on-failure: "true"
        save-if: ${{ github.ref == 'refs/heads/main' }}
        prefix-key: lint
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - uses: taiki-e/install-action@just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Check packages individually
      run: just check-individually
    - name: Run lint
      run: just lint

  build-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: docker/setup-buildx-action@v3
    - uses: taiki-e/install-action@just
    - name: Build Docker
      run: just build-docker

  integration:
    runs-on: ubuntu-latest
    timeout-minutes: 35
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: Swatinem/rust-cache@v2
      name: Enable Rust Caching
      with:
        shared-key: "integration"
        cache-on-failure: "true"
        save-if: ${{ github.ref == 'refs/heads/main' }}
        prefix-key: integration
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - uses: taiki-e/install-action@just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Run tests
      run: just run-demo --ignore-stamp --yapper -c test-configs/c0
    - name: Run tests with late-start node
      run: just run-demo -l --ignore-stamp --yapper -c test-configs/c0
    - name: Run sailfish demo
      run: just run-sailfish-demo
    - name: Test with block-maker
      run: just test-all
    - name: Test dynamic committee change
      run: just test-dyn-comm

  netsim:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: Swatinem/rust-cache@v2
      name: Enable Rust Caching
      with:
        shared-key: "netsim"
        cache-on-failure: "true"
        save-if: ${{ github.ref == 'refs/heads/main' }}
        prefix-key: netsim
    - name: Show net devices
      run: ip -o addr show scope global
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - uses: taiki-e/install-action@just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Run network simulation
      run: just forward-ipv4 true create-net netsim 5

  contracts:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: taiki-e/install-action@just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Run contract tests
      run: forge test -vvv

  nitro-timeboost-integration:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Install protobuf compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    - uses: Swatinem/rust-cache@v2
      name: Enable Rust Caching
      with:
        shared-key: "nitro"
        cache-on-failure: "true"
        save-if: ${{ github.ref == 'refs/heads/main' }}
        prefix-key: nitro
    - uses: taiki-e/install-action@just
    - name: Install rustfmt for nightly
      run: rustup component add --toolchain nightly rustfmt
    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@v1
    - name: Run Test Node with Timeboost
      run: |
        just run-integration-nitro-ci
    - name: Run test timeboost with nitro sequencer
      run: just run-demo --ignore-stamp -c test-configs/nitro-ci --rounds 10000 --nitro-senders 2 --yapper --nitro http://localhost:8547
    - name: Verify sequencer blocks
      run: |
        RUST_LOG=info just verify-blocks
    - name: Docker Logs Sequencer 1
      if: failure()
      run: docker logs timeboost-nitro0-1
    - name: Docker Logs Sequencer 2
      if: failure()
      run: docker logs timeboost-nitro0-1
